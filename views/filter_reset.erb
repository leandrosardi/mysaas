<% 
nid = params[:nid]
new_password_1 = params[:new_password_1]
new_password_2 = params[:new_password_2]

# validar que los parametros no esten vacios
if nid.to_s.size==0
	redirect "/recover?err=#{CGI::escape("Notification ID is Required.")}"
end

# TODO: Validar que nid tenga el formato de un GUID

# load objects
notification = BlackStack::MySaaS::NotificationConfirm.where(:id=>nid).first

# verifico que la notificacion no es anterior a NotificationReset::LINK_TIMEOUT
if notification.oldness > BlackStack::MySaaS::NotificationReset::LINK_TIMEOUT
	redirect "/recover?err=#{CGI::escape("Link Expired.")}"
end

# load objects
user = BlackStack::MySaaS::User.where(:id=>notification.id_user).first

# verifico que el usuario exista
if user.nil?
	redirect "/recover?err=#{CGI::escape("User Not Found.")}"
end

begin
	user.change_password(BCrypt::Password.new(user.password), new_password_1, new_password_2)
rescue => e
	redirect "/recover?err=#{CGI::escape(e.message)}"
end

# redirecciono a la pagina de login
redirect "/login?msg=#{CGI::escape("Password Changed Successfully.")}"
%>