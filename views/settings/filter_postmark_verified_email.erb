<%
    return_message = {}

    id_postmark = params[:id_postmark]

    if id_postmark.nil? || id_postmark.to_s.size == 0
        DB.disconnect
		GC.start
		redirect_adapted_to_nginx getDivisionURL + "/settings/clientinformation?errdesc=ID%20Postmark%20parameter%20expected."
    end

    begin
		client_postmark = Postmark::AccountApiClient.new(POSTMARK_API_TOKEN, secure: true)
	rescue => exception
		DB.disconnect
		GC.start
		redirect_adapted_to_nginx getDivisionURL + "/settings/clientinformation?errdesc=#{URI.encode(exception.message)}"
    end

    begin
        resend = client_postmark.resend_sender_confirmation(id_postmark)
        return_message[:status] = resend[:message]
        return_message[:value] = resend[:error_code]

        DB.disconnect
        GC.start
        return return_message.to_json
    rescue => exception
        DB.disconnect
        GC.start
        redirect_adapted_to_nginx getDivisionURL + "/settings/clientinformation?errdesc=#{URI.encode(exception.message)}"
    end
%>