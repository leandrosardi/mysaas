<!-- HERE IS HOW TO CATCH POST/GET PARAMETERS -->
<%
  uid = params[:uid]
  cid = params[:cid]
  user = BlackStack::Core::User.where(:id=>uid).first
  current_password = params[:current_password]
  new_password = params[:new_password]
  repeat_password = params[:repeat_password]

  if (new_password.to_s.size==0)
# libero recursos
DB.disconnect
GC.start
    redirect '/settings/password?err='+ERR_RESET_NULL_PASSWORD_1.to_s
  end
  if (repeat_password.to_s.size==0)
# libero recursos
DB.disconnect
GC.start
    redirect '/settings/password?err='+ERR_RESET_NULL_PASSWORD_2.to_s
  end
  if (repeat_password.to_s.size==0)
# libero recursos
DB.disconnect
GC.start
    redirect '/settings/password?err='+ERR_RESET_NULL_PASSWORD_2.to_s
  end
  if (new_password.to_s!=repeat_password.to_s)
# libero recursos
DB.disconnect
GC.start
    redirect '/settings/password?err='+ERR_RESET_PASSWORDS_NOT_MATCH.to_s
  end
  if !new_password.password?
	# libero recursos
	DB.disconnect
	GC.start
    redirect '/settings/password?err='+ERR_SIGNUP_PASSWORD_IS_WRONG.to_s
  end
  
  # Actualizo la password
  DB.execute("UPDATE [user] SET password='#{new_password.gsub("'", "''")}' WHERE [id]='#{user.id}'")

  # envio la informacion a la division central
  url = "#{BlackStack::Pampa::api_url}/api1.2/central/update_password.json"
  res = BlackStack::Netting::call_post(url, {'api_key' => BlackStack::Pampa::api_key, 'uid' => user.id, 'current_password' => current_password, 'password' => new_password})
  parsed = JSON.parse(res.body)
  if (parsed["status"]=="success")
	# libero recursos
	DB.disconnect
	GC.start
	# redireccionar al dashboard
	redirect '/settings/password?msg=Password%20Updated.'
  else
	# libero recursos
	DB.disconnect
	GC.start
	# redireccionar al dashboard
	redirect "/settings/password?err=#{CGI.escape(parsed['status'].to_s)}"
  end

  DB.disconnect
  GC.start
  # redireccionar al dashboard
  redirect '/settings/password?msg=Password%20NOT%20Updated.'

%>
<!-- ---------------------------------------- -->
