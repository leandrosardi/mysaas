<div class="mynavbar mysticky">
	<section class="row-fluid">	
		<div class="span6">
			<%=nav4("Developers", "/developers", "MySaaS", "/developers/mysaas", "Tables", "/developers/mysaas/tables", "Basics")%>
		</div>
	</section>
</div>


<!-- Contennts  -->
<h4>Contents</h4>
<section class="row-fluid">
	<div class="span12 box">
		<ul>
			<li><a href='#simple-query-table'>Simple Query Table</a></li>
			<li><a href='#complex-query-table'>Complex Query Table</a></li>
			<li><a href='#enhanced-html'>Enhanced HTML</a></li>
			<li><a href='#calculating-total-results'>Calculating Total Results</a></li>
			<li><a href='#calculating-total-pages'>Total Pages</a></li>
			<li><a href='#pagination'>Pagination</a></li>
			<li><a href='#filtering'>Filtering</a></li>
			<li><a href='#sorting'>Sorting</a></li>
		</ul>
	</div>
</section>

<!-- Simple Query Table -->
<h4 id='simple-query-table'>Simple Query Table</h4>
<%
q = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
	LIMIT 3
" 
%>
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%>
				<tr>
					<td><%=row[:name]%></td>
					<td><%=row[:position]%></td>
					<td><%=row[:stat_company_name]%></td>
					<td><%=row[:stat_industry_name]%></td>
					<td><%=row[:stat_location_name]%></td>
				</tr>
				<%
				GC.start
				DB.disconnect
				end
				%>
			</tbody>
		</table>
	</div>
</section>

<section class="row-fluid box">
	<p>Aside of the NavBar, this is the only code that is required to draw a table.</p>

	<p>Some Hints:</p>

	<ul>
		<li>Note the usage <code>LIMIT 3</code> to bring the first 3 results.</li>
			
		<li>The fields <code>stat_</code> hold <b>calculated values</b>.<br/>
		That means: values that you can grab with complex SQL, but you prefer to mirror such a value into a field in order to optimize the database access.</li>
		
		<li>Never use <code>SELECT *</code>, because it is not a good practice.<br/>
		List exactly the columns you want to bring.</li>
		
		<li>When you iterate a dataset, alway add <code>DB.disconnect</code> and <code>GC.start</code> on each iteration.</li>
			
		<li>Note the usage of <code>DB[q].all</code> instead <code>DB[q].each</code>.</li>
	</ul>

	<pre class="line-numbers language-html html">
<%='
<%
q = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
	LIMIT 3
" 
%
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%
				<tr>
					<td><%=row[:name]%</td>
					<td><%=row[:position]%</td>
					<td><%=row[:stat_company_name]%</td>
					<td><%=row[:stat_industry_name]%</td>
					<td><%=row[:stat_location_name]%</td>
				</tr>
				<%
					GC.start
					DB.disconnect
				end
				%
			</tbody>
		</table>
	</div>
</section>
'.encode_html
%>
	</pre>
</section>

<!-- Complex Query Table -->
<h4 id='complex-query-table'>Complex Query Table</h4>
<%
q = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name, COUNT(DISTINCT d1.id) AS emails, COUNT(DISTINCT d2.id) AS phones
	FROM fl_lead l
	LEFT JOIN fl_data d1 ON (l.id = d1.id_lead AND d1.\"type\" = 20) -- emails
	LEFT JOIN fl_data d2 ON (l.id = d2.id_lead AND d2.\"type\" = 10) -- phones
	GROUP BY l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	LIMIT 3
"
%>
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
				<th>Emails</th>
				<th>Phones</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%>
				<tr>
					<td><%=row[:name]%></td>
					<td><%=row[:position]%></td>
					<td><%=row[:stat_company_name]%></td>
					<td><%=row[:stat_industry_name]%></td>
					<td><%=row[:stat_location_name]%></td>
					<td><%=row[:emails]%></td>
					<td><%=row[:phones]%></td>
				</tr>
				<%
				end
				%>
			</tbody>
		</table>
	</div>
</section>

<section class="row-fluid box">
	<p>Aside of the NavBar, this is the only code that is required to draw a table.</p>

	<p>Some Hints:</p>

	<ul>
		<li>Note the usage of <code>LEFT JOIN</code>, <code>COUNT(DISTINCT)</code> and <code>GROUP BY</code> to build complex queries.<br/>
		If you don&apos;t know how do <code>LEFT JOIN</code> works, refer to <a href='https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-left-join/' target='_window'>this tutorial</a>.</br> 
		If you don&apos;t know how do <code>GROUP BY</code> works, refer to <a href='https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-group-by/' target='_window'>this tutorial</a>.</br> 
		</li>
		<li>Note that PostgreSQL&apos;s reserved words like <code>type</code>.<br/>
		You should write reserved words between double quotes (&quot;).</li>
	</ul>

	<pre class="line-numbers language-html html">
<%='
<%
q = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name, COUNT(DISTINCT d1.id) AS emails, COUNT(DISTINCT d2.id) AS phones
	FROM fl_lead l
	LEFT JOIN fl_data d1 ON (l.id = d1.id_lead AND d1.\"type\" = 20) -- emails
	LEFT JOIN fl_data d2 ON (l.id = d2.id_lead AND d2.\"type\" = 10) -- phones
	GROUP BY l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	LIMIT 3
"
%
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
				<th>Emails</th>
				<th>Phones</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%
				<tr>
					<td><%=row[:name]%</td>
					<td><%=row[:position]%</td>
					<td><%=row[:stat_company_name]%</td>
					<td><%=row[:stat_industry_name]%</td>
					<td><%=row[:stat_location_name]%</td>
					<td><%=row[:emails]%</td>
					<td><%=row[:phones]%</td>
				</tr>
				<%
				end
				%
			</tbody>
		</table>
	</div>
</section>
'.encode_html
%>
	</pre>
</section>

<!-- Enhanced HTML -->
<h4 id='enhanced-html'>Enhanced HTML</h4>
<%
q = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name, COUNT(DISTINCT d1.id) AS emails, COUNT(DISTINCT d2.id) AS phones
	FROM fl_lead l
	LEFT JOIN fl_data d1 ON (l.id = d1.id_lead AND d1.\"type\" = 20) -- emails
	LEFT JOIN fl_data d2 ON (l.id = d2.id_lead AND d2.\"type\" = 10) -- phones
	GROUP BY l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	LIMIT 3
"
%>
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th style="width:90px;">Name</th>
				<th style="width:auto;">Position</th>
				<th style="width:90px;">Company</th>
				<th style="width:90px;">Industry</th>
				<th style="width:90px;">Location</th>
				<th style="width:32px;text-align:right;">Emails</th>
				<th style="width:32px;text-align:right;">Phones</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%>
				<tr>
					<td class="fix" title="<%=row[:name].to_s.encode_html%>"><%=row[:name].to_s.encode_html%></td>
					<td class="fix" title="<%=row[:position].to_s.encode_html%>"><%=row[:position].to_s.encode_html%></td>
					<td class="fix" title="<%=row[:stat_company_name].to_s.encode_html%>"><%=row[:stat_company_name].to_s.encode_html%></td>
					<td class="fix" title="<%=row[:stat_industry_name].to_s.encode_html%>"><%=row[:stat_industry_name].to_s.encode_html%></td>
					<td class="fix" title="<%=row[:stat_location_name].to_s.encode_html%>"><%=row[:stat_location_name].to_s.encode_html%></td>
					<td class="fix" title="<%=row[:emails].to_s.encode_html%>" style="text-align:right;"><%=row[:emails].to_label%></td>
					<td class="fix" title="<%=row[:phones].to_s.encode_html%>" style="text-align:right;"><%=row[:phones].to_label%></td>
				</tr>
				<%
				end
				%>
			</tbody>
		</table>
	</div>
</section>

<section class="row-fluid box">
	<p>Aside of the NavBar, this is the only code that is required to draw a table.</p>

	<p>Some Hints:</p>

	<ul>
		<li>Define the <code>thread</code>, with the width of each column.</li>
		<li>Reserve the <code>width:auto</code> for those columns who require the maximum width as possible.</li>
		<li>Always use <code>.to_s.encode_html</code> when you build dynamic-HTML using strings that you don&apos;t know a priori.</li>
		<li>Always use <code>.to_label</code> when you build dynamic-HTML using integers. Such a method will convert the integer to a string, with thousands separator.</li>
		<li>Use right text aligment for numeric columns.</li>
		<li>On each <code>td</code> use the <code>class='fix'</code> for wrapping and hiding text within a cell.</li>
		<li>Also, use the attribute <code>title</code> to show the full content of the cell when the user moves the mouse over it.</li>
	</ul>

	<pre class="line-numbers language-html html">
<%='
<%
q = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name, COUNT(DISTINCT d1.id) AS emails, COUNT(DISTINCT d2.id) AS phones
	FROM fl_lead l
	LEFT JOIN fl_data d1 ON (l.id = d1.id_lead AND d1.\"type\" = 20) -- emails
	LEFT JOIN fl_data d2 ON (l.id = d2.id_lead AND d2.\"type\" = 10) -- phones
	GROUP BY l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	LIMIT 3
"
%
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th style="width:90px;">Name</th>
				<th style="width:auto;">Position</th>
				<th style="width:90px;">Company</th>
				<th style="width:90px;">Industry</th>
				<th style="width:90px;">Location</th>
				<th style="width:32px;text-align:right;">Emails</th>
				<th style="width:32px;text-align:right;">Phones</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%
				<tr>
					<td class="fix" title="<%=row[:name].to_s.encode_html%"><%=row[:name].to_s.encode_html%</td>
					<td class="fix" title="<%=row[:position].to_s.encode_html%"><%=row[:position].to_s.encode_html%</td>
					<td class="fix" title="<%=row[:stat_company_name].to_s.encode_html%"><%=row[:stat_company_name].to_s.encode_html%</td>
					<td class="fix" title="<%=row[:stat_industry_name].to_s.encode_html%"><%=row[:stat_industry_name].to_s.encode_html%</td>
					<td class="fix" title="<%=row[:stat_location_name].to_s.encode_html%"><%=row[:stat_location_name].to_s.encode_html%</td>
					<td class="fix" title="<%=row[:emails].to_s.encode_html%" style="text-align:right;"><%=row[:emails].to_label%</td>
					<td class="fix" title="<%=row[:phones].to_s.encode_html%" style="text-align:right;"><%=row[:phones].to_label%</td>
				</tr>
				<%
				end
				%
			</tbody>
		</table>
	</div>
</section>
'.encode_html
%>
	</pre>
</section>


<!-- Total Results -->
<h4 id='calculating-total-results'>Calculating Total Results</h4>
<%
all = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
" 

total_rows = DB[all].count

q = "
	"+all+"
	LIMIT 3
"
%>
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%>
				<tr>
					<td><%=row[:name]%></td>
					<td><%=row[:position]%></td>
					<td><%=row[:stat_company_name]%></td>
					<td><%=row[:stat_industry_name]%></td>
					<td><%=row[:stat_location_name]%></td>
				</tr>
				<%
				end
				%>
			</tbody>
		</table>
		<p><%=total_rows.to_label%> <b>Total Results</b></p>
	</div>
</section>

<section class="row-fluid box">
	<p>Aside of the NavBar, this is the only code that is required to draw a table.</p>

	<pre class="line-numbers language-html html">
<%='
<%
all = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
" 

total_rows = DB[all].count

q = "
	"+all+"
	LIMIT 3
"
%
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%
				<tr>
					<td><%=row[:name]%</td>
					<td><%=row[:position]%</td>
					<td><%=row[:stat_company_name]%</td>
					<td><%=row[:stat_industry_name]%</td>
					<td><%=row[:stat_location_name]%</td>
				</tr>
				<%
				end
				%
			</tbody>
		</table>
		<p><%=total_rows.to_label% <b>Total Results</b></p>
	</div>
</section>
'.encode_html
%>
	</pre>
</section>

<!-- Total Pages -->
<h4 id='calculating-total-pages'>Total Pages</h4>
<%

all = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
" 

page_size = 3
total_rows = DB[all].count
total_pages = (total_rows.to_f/page_size.to_f).ceil

q = "
	"+all+"
	LIMIT "+page_size.to_label+"
"
%>
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%>
				<tr>
					<td><%=row[:name]%></td>
					<td><%=row[:position]%></td>
					<td><%=row[:stat_company_name]%></td>
					<td><%=row[:stat_industry_name]%></td>
					<td><%=row[:stat_location_name]%></td>
				</tr>
				<%
				end
				%>
			</tbody>
		</table>
		<p><%=total_pages.to_label%> <b>Total Pages</b> (<%=page_size.to_label%> results per page)</p>
	</div>
</section>

<section class="row-fluid box">
	<p>Aside of the NavBar, this is the only code that is required to draw a table.</p>

	<pre class="line-numbers language-html html">
<%='
<%
all = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
" 

page_size = 3
total_rows = DB[all].count
total_pages = (total_rows.to_f/page_size.to_f).ceil

q = "
	"+all+"
	LIMIT "+page_size.to_label+"
"
%
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%
				<tr>
					<td><%=row[:name]%</td>
					<td><%=row[:position]%</td>
					<td><%=row[:stat_company_name]%</td>
					<td><%=row[:stat_industry_name]%</td>
					<td><%=row[:stat_location_name]%</td>
				</tr>
				<%
				end
				%
			</tbody>
		</table>
		<p><%=total_pages.to_label% <b>Total Pages</b> (<%=page_size.to_label% results per page)</p>
	</div>
</section>
'.encode_html
%>
	</pre>
</section>

<!-- Pagination -->
<h4 id='pagination'>Pagination</h4>
<%
page_size = 3

all = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
" 

page_size = 3
total_rows = DB[all].count
total_pages = (total_rows.to_f/page_size.to_f).ceil
# if there is a GET parameters `number` on the URL, update the user preference regarding the page number on this screen
# then, get user preferences regarding the page number on this screen
page_number = @login.user.preference("developers.tables.basics.pagination.page", 1, params[:number].nil? ? nil : params[:number].to_i)
# pagination correction to prevent glitches
page_number = 1 if page_number < 1
page_number = total_pages if page_number > total_pages
# calculate info for showing at the bottom of the table
from_row = (page_number.to_i-1) * page_size.to_i + 1
to_row = [page_number*page_size, total_rows].min

q = "
	"+all+"
	LIMIT "+(page_number*page_size).to_label+"
	OFFSET "+((page_number.to_i - 1) * page_size.to_i).to_label+"
"

%>
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%>
				<tr>
					<td><%=row[:name]%></td>
					<td><%=row[:position]%></td>
					<td><%=row[:stat_company_name]%></td>
					<td><%=row[:stat_industry_name]%></td>
					<td><%=row[:stat_location_name]%></td>
				</tr>
				<%
				end
				%>
			</tbody>
		</table>
		<p><b>Records:</b> <%=from_row.to_label%> to <%=to_row.to_label%> <b>of</b> <%=total_rows.to_label%></p>
		<div class="pagination"></div>
		<script>
			drawPagination($(".pagination"), <%=page_number%>, <%=total_pages%>);
		</script>
	</div>
</section>

<section class="row-fluid box">
	<p>Aside of the NavBar, this is the only code that is required to draw a table.</p>

	<p>Some Hints:</p>
	
	<ul>
		<li>Note the usage of <code>@login.user.preference</code> to bring the value of the parameter from the database, from the preferences of the user.</li>
		<li>The 3th parameter in <code>@login.user.preference</code> is a value to update the user preferences before the function brings its value.<br/>
		This value is optional, if it is not provided, the function will not update the user preferences.<br/>
		In this example, we use the GET parameter received in the URL to update the user preference. 
		</li>
		<li>Se 2nd parameter in <code>@login.user.preference</code> is the default value in case that both, the user preference and the GET parameter are <code>nil</code>.</li>
	</ul>

	<pre class="line-numbers language-html html">
<%='
<%
page_size = 3

all = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
" 

page_size = 3
total_rows = DB[all].count
total_pages = (total_rows.to_f/page_size.to_f).ceil

# if there is a GET parameters `number` on the URL, update the user preference regarding the page number on this screen
# then, get user preferences regarding the page number on this screen
page_number = @login.user.preference("developers.tables.basics.pagination.page", 1, params[:number].nil? ? nil : params[:number].to_i)

# pagination correction to prevent glitches
page_number = 1 if page_number < 1
page_number = total_pages if page_number > total_pages

# calculate info for showing at the bottom of the table
from_row = (page_number.to_i-1) * page_size.to_i + 1
to_row = [page_number*page_size, total_rows].min

q = "
	"+all+"
	LIMIT "+(page_number*page_size).to_label+"
	OFFSET "+((page_number.to_i - 1) * page_size.to_i).to_label+"
"

%
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<th>Name</th>
				<th>Position</th>
				<th>Company</th>
				<th>Industry</th>
				<th>Location</th>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%
				<tr>
					<td><%=row[:name]%</td>
					<td><%=row[:position]%</td>
					<td><%=row[:stat_company_name]%</td>
					<td><%=row[:stat_industry_name]%</td>
					<td><%=row[:stat_location_name]%</td>
				</tr>
				<%
				end
				%
			</tbody>
		</table>
		<p><b>Records:</b> <%=from_row.to_label% to <%=to_row.to_label% <b>of</b> <%=total_rows.to_label%</p>
		<div class="pagination"></div>
		<script>
			drawPagination($(".pagination"), <%=page_number%, <%=total_pages%);
		</script>
	</div>
</section>
'.encode_html
%>
	</pre>
</section>

<!-- Filtering -->
<h4 id='filtering'>Filtering</h4>
<%
filter_name = @login.user.preference("developers.tables.basics.filter.name", "", params[:name])
filter_company = @login.user.preference("developers.tables.basics.filter.company", "", params[:company])

all = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
	WHERE 1=1
" 

all += "
	AND l.name LIKE '%"+filter_name.to_s.to_sql+"%'
" if filter_name.to_s.length > 0

all += "
	AND l.stat_company_name LIKE '%"+filter_company.to_s.to_sql+"%'
" if filter_company.to_s.length > 0

q = "
	"+all+"
	LIMIT 3
"
%>
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<tr>
					<th>Name</th>
					<th>Position</th>
					<th>Company</th>
					<th>Industry</th>
					<th>Location</th>
					<th><!-- search button --></th>
				</tr>
				<form action="/developers/mysaas/tables/basics" method="get">
					<tr>
						<th><input class="input input-block-level" id="name" name="name" value="<%=filter_name.to_s.encode_html%>" /></th>
						<th></th>
						<th><input class="input input-block-level" id="ompany" name="company" value="<%=filter_company.to_s.encode_html%>" /></th>
						<th></th>
						<th></th>
						<th><button type="submit" class="btn btn-link">Search</button></th>
					</tr>
				</form>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%>
				<tr>
					<td><%=row[:name]%></td>
					<td><%=row[:position]%></td>
					<td><%=row[:stat_company_name]%></td>
					<td><%=row[:stat_industry_name]%></td>
					<td><%=row[:stat_location_name]%></td>
					<td><!-- search button --></td>
				</tr>
				<%
				end
				%>
			</tbody>
		</table>
	</div>
</section>

<section class="row-fluid box">
	<p>Aside of the NavBar, this is the only code that is required to draw a table.</p>

	<p>Some Hints:</p>
	
	<ul>
		<li>Alwasys use <code>.to_s.to_sql</code> when you build dynamic-SQL using strings that you don&apos;t know a priori.</li>
	</ul>

	<pre class="line-numbers language-html html">
<%='
<%
filter_name = @login.user.preference("developers.tables.basics.filter.name", "", params[:name])
filter_company = @login.user.preference("developers.tables.basics.filter.company", "", params[:company])

all = "
	SELECT l.name, l.position, l.stat_company_name, l.stat_industry_name, l.stat_location_name
	FROM fl_lead l
	WHERE 1=1
" 

all += "
	AND l.name LIKE '%"+filter_name.to_s.to_sql+"%'
" if filter_name.to_s.length > 0

all += "
	AND l.stat_company_name LIKE '%"+filter_company.to_s.to_sql+"%'
" if filter_company.to_s.length > 0

q = "
	"+all+"
	LIMIT 3
"
%
<section class="row-fluid">
	<div class="span12 box">
		<table class="table table-striped" style="table-layout: fixed; width: 100%;">
			<thead>
				<tr>
					<th>Name</th>
					<th>Position</th>
					<th>Company</th>
					<th>Industry</th>
					<th>Location</th>
					<th><!-- search button --></th>
				</tr>
				<form action="/developers/mysaas/tables/basics" method="get">
					<tr>
						<th><input class="input input-block-level" id="name" name="name" value="<%=filter_name.to_s.encode_html%" /></th>
						<th></th>
						<th><input class="input input-block-level" id="ompany" name="company" value="<%=filter_company.to_s.encode_html%" /></th>
						<th></th>
						<th></th>
						<th><button type="submit" class="btn btn-link">Search</button></th>
					</tr>
				</form>
			</thead>
			<tbody>
				<%
				DB[q].all do |row|
				%
				<tr>
					<td><%=row[:name]%</td>
					<td><%=row[:position]%</td>
					<td><%=row[:stat_company_name]%</td>
					<td><%=row[:stat_industry_name]%</td>
					<td><%=row[:stat_location_name]%</td>
					<td><!-- search button --></td>
				</tr>
				<%
				end
				%
			</tbody>
		</table>
	</div>
</section>
'.encode_html
%>
	</pre>
</section>

<!-- Sorting -->
<h4 id='sorting'>Sorting</h4>

<i>(pending)</i>
