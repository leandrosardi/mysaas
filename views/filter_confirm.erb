<% 
nid = params[:nid]

# validar que los parametros no esten vacios
if (nid.to_s.size==0 || nid.to_s.size==0)
	redirect "/login?err=#{CGI::escape("Notification ID is Required.")}"
end

# TODO: Validar que nid tenga el formato de un GUID

# 
notification = BlackStack::Core::NotificationConfirm.where(:id=>nid).first

# verifico si la notificacion existe
if notification.nil?
	redirect "/login?err=#{CGI::escape("Notification ID Not Found.")}"
end

puts
puts notification.oldness
puts BlackStack::Core::NotificationConfirm::LINK_TIMEOUT

# verifico que la notificacion no es anterior a NotificationConfirmation::NOTIFICATION_CONFIRMATION_LINK_TIMEOUT
if notification.oldness > BlackStack::Core::NotificationConfirm::LINK_TIMEOUT
	redirect "/login?err=#{CGI::escape("Notification Expired.")}"
end

# 
user = BlackStack::Core::User.where(:id=>notification.id_user).first

# verifico que el usuario exista
if user.nil?
	redirect "/login?err=#{CGI::escape("User Not Found.")}"
end

# activar la cuenta
user.verified = true
user.save

# redirecciono a la pagina de login
redirect "/login?msg=#{CGI::escape("Email Verification Success!")}"
%>
<!-- ---------------------------------------- -->
